<Page x:Class="FEI.pages.Factura_Sunat"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:gif="http://wpfanimatedgif.codeplex.com"  
      xmlns:local="clr-namespace:FEI.pages"        
      Title="Envio de Factura a Sunat" Loaded="Page_Loaded" KeyDown="Page_KeyDown">
    <Page.Resources>

        <Style x:Key="CalendarDayButtonStyleEx"
                TargetType="{x:Type CalendarDayButton}">
            <Setter Property="MinWidth"
                    Value="5" />
            <Setter Property="MinHeight"
                    Value="5" />
            <Setter Property="FontSize"
                    Value="10" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">


                        <Grid x:Name="CalendarDayButtonGrid">


                            <Grid.ToolTip>
                                <MultiBinding Converter="{local:HighlightDateConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding />
                                        <Binding RelativeSource="{RelativeSource FindAncestor, 
                                            AncestorType={x:Type local:DatePickerEx}}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Grid.ToolTip>


                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                To="0.5"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="HighlightBackground" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                To="0.5"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="HighlightBackground" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                To="0"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="HighlightBackground" />
                                            <DoubleAnimation Duration="0"
                                                To=".35"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="NormalText" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                To=".75"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="SelectedBackground" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="CalendarButtonFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                    Storyboard.TargetProperty="Visibility"
                                                    Storyboard.TargetName="DayButtonFocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CalendarButtonUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                Storyboard.TargetProperty="Visibility"
                                                Storyboard.TargetName="DayButtonFocusVisual">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Active" />
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0"
                                                To="#FF777777"
                                                Storyboard.TargetProperty=
                                                    "(TextElement.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="NormalText" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="RegularDay" />
                                    <VisualState x:Name="Today">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                To="1"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="TodayBackground" />
                                            <ColorAnimation Duration="0"
                                                To="#FFFFFFFF"
                                                Storyboard.TargetProperty=
                                                    "(TextElement.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="NormalText" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="BlackoutDayStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NormalDay" />
                                    <VisualState x:Name="BlackoutDay">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                                To=".2"
                                                                Storyboard.TargetProperty="Opacity"
                                                                Storyboard.TargetName="Blackout" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="TodayBackground"
                                        Fill="#FFAAAAAA"
                                        Opacity="0"
                                        RadiusY="1"
                                        RadiusX="1" />

                            <Rectangle x:Name="AccentBackground"
                                        RadiusX="1"
                                        RadiusY="1"
                                        IsHitTestVisible="False"
                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, 
                                            Path=DateHighlightBrush}" />

                            <Rectangle x:Name="SelectedBackground"
                                        Fill="#FFBADDE9"
                                        Opacity="0"
                                        RadiusY="1"
                                        RadiusX="1" />
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" />
                            <Rectangle x:Name="HighlightBackground"
                                        Fill="#FFBADDE9"
                                        Opacity="0"
                                        RadiusY="1"
                                        RadiusX="1" />
                            <ContentPresenter x:Name="NormalText"
                                                TextElement.Foreground="#FF333333"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="5,1,5,1"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Path x:Name="Blackout"
                                    Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 
                                    L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 
                                    L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 
                                    L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                                    Fill="#FF000000"
                                    HorizontalAlignment="Stretch"
                                    Margin="3"
                                    Opacity="0"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill"
                                    VerticalAlignment="Stretch" />
                            <Rectangle x:Name="DayButtonFocusVisual"
                                        IsHitTestVisible="false"
                                        RadiusY="1"
                                        RadiusX="1"
                                        Stroke="#FF45D6FA"
                                        Visibility="Collapsed" />
                        </Grid>

                        <ControlTemplate.Triggers>

                            <!-- No ToolTip highlighting if IValueConverter returned null -->
                            <DataTrigger Value="{x:Null}">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{local:HighlightDateConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding />
                                            <Binding RelativeSource= "{RelativeSource FindAncestor, AncestorType={x:Type local:DatePickerEx}}" />
                                        </MultiBinding.Bindings>
                                    </MultiBinding>

                                </DataTrigger.Binding>
                                <Setter TargetName="AccentBackground"
                                        Property="Visibility"
                                        Value="Hidden" />
                            </DataTrigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="calendarWithGotToTodayStyle" TargetType="{x:Type Calendar}">
            <!--<Setter Property="Foreground"
                    Value="#FF333333" />
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="BorderBrush"
                    Value="DarkGray" />
            <Setter Property="BorderThickness"
                    Value="1" />-->
            <Setter Property="CalendarDayButtonStyle"
                    Value="{StaticResource CalendarDayButtonStyleEx}" />
           <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                       <Border BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <StackPanel Orientation="Vertical">
                                <StackPanel x:Name="PART_Root"
                                            HorizontalAlignment="Center">
                                    <CalendarItem x:Name="PART_CalendarItem"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Style="{TemplateBinding CalendarItemStyle}" />
                                    <Button  x:Name="PART_GoToTodayButton"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Margin="10"
                                                Content="Go To Today" />
                                </StackPanel>
                            </StackPanel>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>


        <ContextMenu x:Key="MyContextMenu">
            <MenuItem Header="Detalle del documento" Click="DetalleItem_Click"  />
            <MenuItem Header="Descargar XML envio" Click="XMLEnvio_Click"  />
            <MenuItem Header="Descargar XML recepcion" Click="XMLRecepcion_Click"  />
        </ContextMenu>
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#1ba1e2"/>
            <Setter Property="BorderBrush" Value="#1684ba"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dddddd" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Label Grid.Column="0" Grid.Row="0" x:Name="label" Content="ENVIO DE FACTURAS ELECTRONICAS" HorizontalContentAlignment="Center" FontSize="14" FontWeight="Bold" FontFamily="Calibri" Background="#dbeaf9" />
        <Border Grid.Column="0" Grid.Row="1" Margin="10,10,10,10"
              BorderBrush="#DBDBDB" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
               >
            <Grid  Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid  Grid.Column="0" Grid.Row="0" Margin="40,10,40,0"  >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>
                    <Label  Grid.Column="0" Grid.Row="0" Content="Fecha de Inicio" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="0,6"/>
                    <Label  Grid.Column="0" Grid.Row="1" Content="Fecha de Fin" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="0,6"/>
                    <!--<DatePicker   x:Name="datePick_inicio" Grid.Column="1" Grid.Row="0" Margin="0,5,5,5"  IsDropDownOpen="False" IsTodayHighlighted="True" RenderTransformOrigin="0.5,0.5" >
                        
                    </DatePicker>-->
                    <local:DatePickerEx x:Name="datePick_inicio" Grid.Column="1" Grid.Row="0" Margin="0,5,5,5"  AlternativeCalendarStyle="{StaticResource calendarWithGotToTodayStyle}" />

                    <local:DatePickerEx   x:Name="datePick_fin" Grid.Column="1" Grid.Row="1" Margin="0,5,5,5"  IsDropDownOpen="False" IsTodayHighlighted="True"  />
                    <Label  Grid.Column="2" Grid.Row="0" Content="Tipo de comprobante" HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="0,6"/>
                    <ComboBox  x:Name="cboTipoComprobante" Grid.Column="3" Grid.Row="0" Margin="0,5,5,5" Style="{StaticResource ComboBoxFlatStyle}"/>
                    <StackPanel  Grid.Column="3" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Width="80" Margin="0,0,5,0" Click="btnConsultar_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="imageButton" Source="/FEI;component/images/search-icon.png"  Height="15" Width="15"/>
                                <Label Content="Filtrar"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
                <DataGrid Grid.Column="0" Grid.Row="1" Margin="40,10,40,0" FrozenColumnCount ="0" x:Name="dgComprobantesFactura" ColumnHeaderStyle="{DynamicResource HeaderStyle}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  SelectionMode="Single"
                  CanUserDeleteRows="False"
                  CanUserResizeRows="False"
                  Background="White"
                  HeadersVisibility="Column"
                  VerticalGridLinesBrush="#000000"
                  GridLinesVisibility="None" SelectionUnit="FullRow"  MaxHeight="285" MinHeight="250"  >
                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#DEDCD9"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn MaxWidth="35" CanUserReorder="False" CanUserResize="False">
                            <DataGridTemplateColumn.Header>
                                <CheckBox HorizontalAlignment="Center" x:Name="chkAll" Checked="chkAll_Checked" Unchecked="chkAll_Unchecked"/>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox Name="chkDiscontinue"  IsChecked="{Binding Path=Check,Mode=TwoWay}" Margin="0 2 0 0" Checked="chkDiscontinue_Checked" Unchecked="chkDiscontinue_Unchecked"  />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Binding="{Binding TipoTexto}" IsReadOnly="True" MinWidth="150" CanUserReorder="False" Width="*">
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Comprobante" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding EstadoSCC}" IsReadOnly="True" MinWidth="70"   CanUserReorder="False" SortDirection="Ascending" CanUserSort="True" Width="*"  >
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Estado SCC" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="ENVIADO">
                                            <Setter Property="Foreground" Value="Green"/>
                                            <!--<Setter Property="Text" Value="Factura"/>-->
                                        </Trigger>
                                        <Trigger Property="Text" Value="PENDIENTE (CORRECTO)">
                                            <Setter Property="Foreground" Value="RoyalBlue"/>
                                            <!--<Setter Property="Text" Value="Factura"/>-->
                                        </Trigger>
                                        <Trigger Property="Text" Value="PENDIENTE (ERRORES)">
                                            <Setter Property="Foreground" Value="Red"/>
                                            <!--<Setter Property="Text" Value="Factura"/>-->
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding EstadoSunat}" IsReadOnly="True" MinWidth="90" CanUserReorder="False"  SortDirection="Ascending" CanUserSort="True" Width="*">
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Estado SUNAT" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="ACEPTADO">
                                            <Setter Property="Foreground" Value="Green"/>
                                            <!--<Setter Property="Text" Value="Factura"/>-->
                                        </Trigger>
                                        <Trigger Property="Text" Value="RECHAZADO">
                                            <Setter Property="Foreground" Value="Brown"/>
                                            <!--<Setter Property="Text" Value="Factura"/>-->
                                        </Trigger>
                                        <Trigger Property="Text" Value="SIN RESPUESTA">
                                            <Setter Property="Foreground" Value="Red"/>
                                            <!--<Setter Property="Text" Value="Factura"/>-->
                                        </Trigger>
                                        <Trigger Property="Text" Value="DE BAJA">
                                            <Setter Property="Foreground" Value="Salmon"/>
                                            <!--<Setter Property="Text" Value="Factura"/>-->
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding SerieNumero}" IsReadOnly="True" MinWidth="90" CanUserReorder="False" SortDirection="Ascending" CanUserSort="True" Width="*" >
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Serie-Número" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding FechaEmision}" IsReadOnly="True" MinWidth="100" CanUserReorder="False" SortDirection="Ascending" CanUserSort="True" Width="*">
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Fecha de Emisión" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding FechaEnvio}" IsReadOnly="True" MinWidth="100" CanUserReorder="False" SortDirection="Ascending" CanUserSort="True" Width="*">
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Fecha de Envío" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Comentario}"  Width="2*" MinWidth="200" IsReadOnly="True"  CanUserSort="False" CanUserReorder="False" CanUserResize="False"  >
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Comentario" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                    <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
                                    <Setter Property="TextBlock.FontSize" Value="9" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Grid  Grid.Column="0" Grid.Row="2" Margin="40,20,40,20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="5" Grid.Row="0">
                        <Button Margin="0,0,0,0" x:Name="btnEnviar" HorizontalAlignment="Right" Click="btnEnviar_Click"  VerticalAlignment="Bottom"   >
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="image" Source="/FEI;component/images/send.png" Height="18" Width="26" RenderTransformOrigin="0.654,0.5" />
                                <Label x:Name="TextBoton" Content="Sunat"/>
                            </StackPanel>
                        </Button>
                    </DockPanel>
                    <DockPanel Grid.Column="0" Grid.Row="0">
                        <Button Margin="0,0,0,0" x:Name="btnDescartar" HorizontalAlignment="Left" Click="btnDescartar_Click"  VerticalAlignment="Bottom"   >
                            <StackPanel Orientation="Horizontal">
                                <Image  Source="/FEI;component/images/remove-icon.png" Height="18" Width="26" />
                                <Label  Content="Descartar"/>
                            </StackPanel>
                        </Button>
                    </DockPanel>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Page>
