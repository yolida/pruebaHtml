<Page x:Class="FEI.pages.CertificadoDigital"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:FEI.pages"
      Title="CertificadoDigital" Loaded="Page_Loaded">

    <Page.Resources>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#1ba1e2"/>
            <Setter Property="BorderBrush" Value="#1684ba"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dddddd" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" x:Name="label" Content="Alerta de Certificado Digital" HorizontalContentAlignment="Center" FontSize="14" FontWeight="Bold" FontFamily="Calibri"  Background="#dbeaf9"/>
        <Grid  Grid.Column="0" Grid.Row="1" Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid  Margin="5,20,5,20"  Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DataGrid Grid.Column="0" Grid.Row="0"  Grid.ColumnSpan="4" Margin="0,20,0,20"  FrozenColumnCount ="0" x:Name="dgCertificados" ColumnHeaderStyle="{DynamicResource HeaderStyle}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  SelectionMode="Single"
                  CanUserDeleteRows="False"
                  CanUserResizeRows="False"
                  Background="White"
                  HeadersVisibility="Column"
                  VerticalGridLinesBrush="#000000"
                  GridLinesVisibility="None" SelectionUnit="FullRow"  MaxHeight="270" MinHeight="250" CellEditEnding="dgCertificados_CellEditEnding"  >
                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#DEDCD9"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Serie}" IsReadOnly="True"  CanUserReorder="False" Width="3*">
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Serie del Certificado" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding ValidoDesde}" IsReadOnly="True"  CanUserReorder="False" Width="*">
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Valido desde" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding ValidoHasta}" IsReadOnly="True" CanUserReorder="False" Width="*">
                            <DataGridTextColumn.Header>
                                <TextBlock  Text="Valido hasta" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridComboBoxColumn 
                                                 SelectedValueBinding="{Binding AlertaDias, UpdateSourceTrigger=PropertyChanged}" 
                                                 DisplayMemberPath="_Value" 
                                                 SelectedValuePath="_Id" Width="2*">
                            <DataGridComboBoxColumn.Header>
                                <TextBlock  Text="Programar Alerta" VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.TextAlignment="Center"  TextWrapping="Wrap" />
                            </DataGridComboBoxColumn.Header>
                            <DataGridComboBoxColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background"  Value="#f2f2f2" />
                                </Style>
                            </DataGridComboBoxColumn.CellStyle>
                            <DataGridComboBoxColumn.ElementStyle>
                                <Style TargetType="{x:Type ComboBox}">
                                    <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ParesTiempoAlerta, RelativeSource={RelativeSource Findancestor, AncestorType={x:Type Page}}}" />
                                </Style>
                            </DataGridComboBoxColumn.ElementStyle>
                            <DataGridComboBoxColumn.EditingElementStyle>
                                <Style TargetType="{x:Type ComboBox}">
                                    <Setter Property="ItemsSource" Value="{Binding Path=DataContext.ParesTiempoAlerta, RelativeSource={RelativeSource Findancestor, AncestorType={x:Type Page}}}" />
                                </Style>
                            </DataGridComboBoxColumn.EditingElementStyle>
                        </DataGridComboBoxColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <DockPanel Margin="0,0,0,0" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" VerticalAlignment="Top">
                    <Label>
                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" TextBlock.FontFamily="Calibri" TextBlock.FontSize="12">
                           -> Se programaran las alertas con dias previos a la fecha de vencimiento del Certificado Digital, pudiendo ser 7,15,20 o 30 dias.
                        </TextBlock>
                    </Label>

                </DockPanel>
                <DockPanel Margin="0,0,0,0" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="2" VerticalAlignment="Top">
                    <Label>
                        <TextBlock TextWrapping="Wrap" TextAlignment="Justify" TextBlock.FontFamily="Calibri" TextBlock.FontSize="12">
                            -> Cada vez que ingrese al FEI se mostrará un mensaje emergente indicando la fecha de vencimiento de su Certificado Digital.
                        </TextBlock>
                    </Label>
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</Page>
