<Application x:Class="FEI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:localf="clr-namespace:FEI.pages"
             Startup="App_Startup" Exit="Application_Exit"  DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="styles/TabControlStyle.xaml"/>
                <ResourceDictionary Source="styles/DatePicker.xaml"/>
                <ResourceDictionary></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>


            <SolidColorBrush x:Key="PrimaryBrush" Color="#FF4169AA" />
            <SolidColorBrush x:Key="PrimaryFont" Color="White" />
            <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Color="#405a7c" Offset="0"/>
                <GradientStop Color="#1065d3" Offset="1"/>

            </LinearGradientBrush>

            <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Color="#ffffff" Offset="0.614"/>
                <GradientStop Color="#ffffff" Offset="0.853"/>
                <GradientStop Color="#ffffff" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="TextBoxStyle1" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="AllowDrop" Value="true"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="bg" BorderBrush="#FF825E5E" BorderThickness="1">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="bg" Value="DarkBlue"/>
                                    <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="bg" Value="DarkBlue"/>
                                    <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" TargetName="bg" Value="DarkBlue"/>
                                    <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Color x:Key="detailMark">#FFA1A9B3</Color>
            <SolidColorBrush x:Key="detailMarkBrush" Color="{StaticResource ResourceKey=detailMark}" />
            <Style x:Key="flatTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Grid>
                                <Rectangle  Stroke="{StaticResource ResourceKey=detailMarkBrush}" StrokeThickness="1"/>
                                <TextBox  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" CaretBrush="Black"  Margin="1" Text="{TemplateBinding Text}" BorderThickness="0"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>

                </Setter>
            </Style>
            <!--Header style grid-->
            <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#0d3f7c" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <!--Textbox style-->
            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="DimGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="DimGray" />
                                    <Setter Property="Background" Value="LightGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="DimGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="DimGray" />
                                    <Setter Property="Background" Value="LightGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- en Textbox style-->
            <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
            <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
            <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
            <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
            <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

            <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                    <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                    <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                        <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                        <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="TextElement.Foreground" Value="Black"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                                <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox" >
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Popup showing items -->
                                <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CalendarDayButtonStyleEx"
                TargetType="{x:Type CalendarDayButton}">
                <Setter Property="MinWidth"
                    Value="5" />
                <Setter Property="MinHeight"
                    Value="5" />
                <Setter Property="FontSize"
                    Value="10" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CalendarDayButton}">


                            <Grid x:Name="CalendarDayButtonGrid">


                                <Grid.ToolTip>
                                    <MultiBinding Converter="{localf:HighlightDateConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding />
                                            <Binding RelativeSource="{RelativeSource FindAncestor,  AncestorType={x:Type localf:DatePickerEx}}" />
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Grid.ToolTip>


                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.1" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                To="0.5"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="HighlightBackground" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                To="0.5"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="HighlightBackground" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                To="0"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="HighlightBackground" />
                                                <DoubleAnimation Duration="0"
                                                To=".35"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="NormalText" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                To=".75"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="SelectedBackground" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="CalendarButtonFocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                    Storyboard.TargetProperty="Visibility"
                                                    Storyboard.TargetName="DayButtonFocusVisual">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CalendarButtonUnfocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                Storyboard.TargetProperty="Visibility"
                                                Storyboard.TargetName="DayButtonFocusVisual">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ActiveStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Active" />
                                        <VisualState x:Name="Inactive">
                                            <Storyboard>
                                                <ColorAnimation Duration="0"
                                                To="#FF777777"
                                                Storyboard.TargetProperty=
                                                    "(TextElement.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="NormalText" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DayStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="RegularDay" />
                                        <VisualState x:Name="Today">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                To="1"
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="TodayBackground" />
                                                <ColorAnimation Duration="0"
                                                To="#FFFFFFFF"
                                                Storyboard.TargetProperty=
                                                    "(TextElement.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="NormalText" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="BlackoutDayStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="NormalDay" />
                                        <VisualState x:Name="BlackoutDay">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                                To=".2"
                                                                Storyboard.TargetProperty="Opacity"
                                                                Storyboard.TargetName="Blackout" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="TodayBackground"
                                        Fill="#FFAAAAAA"
                                        Opacity="0"
                                        RadiusY="1"
                                        RadiusX="1" />

                                <Rectangle x:Name="AccentBackground"
                                        RadiusX="1"
                                        RadiusY="1"
                                        IsHitTestVisible="False"
                                        Fill="{Binding RelativeSource={RelativeSource AncestorType=Calendar}, 
                                            Path=DateHighlightBrush}" />

                                <Rectangle x:Name="SelectedBackground"
                                        Fill="#FFBADDE9"
                                        Opacity="0"
                                        RadiusY="1"
                                        RadiusX="1" />
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" />
                                <Rectangle x:Name="HighlightBackground"
                                        Fill="#FFBADDE9"
                                        Opacity="0"
                                        RadiusY="1"
                                        RadiusX="1" />
                                <ContentPresenter x:Name="NormalText"
                                                TextElement.Foreground="#FF333333"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="5,1,5,1"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Path x:Name="Blackout"
                                    Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 
                                    L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 
                                    L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 
                                    L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                                    Fill="#FF000000"
                                    HorizontalAlignment="Stretch"
                                    Margin="3"
                                    Opacity="0"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill"
                                    VerticalAlignment="Stretch" />
                                <Rectangle x:Name="DayButtonFocusVisual"
                                        IsHitTestVisible="false"
                                        RadiusY="1"
                                        RadiusX="1"
                                        Stroke="#FF45D6FA"
                                        Visibility="Collapsed" />
                            </Grid>

                            <ControlTemplate.Triggers>

                                <!-- No ToolTip highlighting if IValueConverter returned null -->
                                <DataTrigger Value="{x:Null}">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{localf:HighlightDateConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding />
                                                <Binding RelativeSource= "{RelativeSource FindAncestor, AncestorType={x:Type localf:DatePickerEx}}" />
                                            </MultiBinding.Bindings>
                                        </MultiBinding>

                                    </DataTrigger.Binding>
                                    <Setter TargetName="AccentBackground"
                                        Property="Visibility"
                                        Value="Hidden" />
                                </DataTrigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="calendarWithGotToTodayStyle" TargetType="{x:Type Calendar}">
                <!--<Setter Property="Foreground"
                    Value="#FF333333" />
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="BorderBrush"
                    Value="DarkGray" />
            <Setter Property="BorderThickness"
                    Value="1" />-->
                <Setter Property="CalendarDayButtonStyle"
                    Value="{StaticResource CalendarDayButtonStyleEx}" />
                <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                       <Border BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <StackPanel Orientation="Vertical">
                                <StackPanel x:Name="PART_Root"
                                            HorizontalAlignment="Center">
                                    <CalendarItem x:Name="PART_CalendarItem"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Style="{TemplateBinding CalendarItemStyle}" />
                                    <Button  x:Name="PART_GoToTodayButton"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Margin="10"
                                                Content="Go To Today" />
                                </StackPanel>
                            </StackPanel>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
