<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converter="clr-namespace:FEI.Converter">

    <Converter:CalendarConverter x:Key="calendarConverter" />
    
    <ControlTemplate x:Key="IconButton" TargetType="{x:Type ToggleButton}">
        <Border>
            <ContentPresenter />
        </Border>
    </ControlTemplate>

    <Style x:Key="tbCalendarStyle" TargetType="{x:Type TextBox}">
           <Setter Property="VerticalContentAlignment" Value="Center"/>
           <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid >
                        <Grid.Background>
                            <ImageBrush ImageSource="/FEIv2;component/images/textBg.jpg" Stretch="Fill" />
                        </Grid.Background>
                        <Border BorderThickness="1" BorderBrush="DarkGray">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                        <ToggleButton Template="{StaticResource IconButton}"
                              MaxHeight="30" 
                              Margin="-1,1,1,1" 
                              Name="PopUpImageButton" 
                              Focusable="False"
                                
                              IsChecked="False">

                            <Image Source="/FEIv2;component/images/toggleButton.jpg"  Width="30" Height="28" Stretch="UniformToFill" Visibility="Visible" HorizontalAlignment="Right" Name="imgPicker" />
                            
                        </ToggleButton>
                        <!--下拉日历-->
                        <Popup  AllowsTransparency="True"  IsOpen="{Binding Path=IsChecked, ElementName=PopUpImageButton, Mode=TwoWay}" x:Name="CustomPopup" Margin="0,-2,0,0" PopupAnimation="Fade" StaysOpen="False">
                            <Calendar Margin="0,-2,0,0" x:Name="CalDisplay" 
                                      SelectedDate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Mode=TwoWay, Converter={StaticResource calendarConverter}}" 
                                      Focusable="False" 
                                      DisplayDate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Mode=OneWay, Converter={StaticResource calendarConverter}}"    
                                      >
                                <Control.Triggers>
                                    <EventTrigger RoutedEvent="Calendar.SelectedDatesChanged">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PopUpImageButton" Storyboard.TargetProperty="IsChecked">
                                                    <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"></DiscreteBooleanKeyFrame>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Control.Triggers>
                            </Calendar>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Visibility" TargetName="imgPicker" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Visibility" TargetName="imgPicker" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>