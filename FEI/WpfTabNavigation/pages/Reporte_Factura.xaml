<Page x:Class="FEI.pages.Reporte_Factura"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
 
      Title="Reporte de Facturas Electronicas" Loaded="Page_Loaded">
    <Page.Resources>
        <Style x:Key="btn" TargetType="Button">
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Border Name="dropShadowBorder" CornerRadius="4" BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">
                                            <GradientStop Color="#22000000" Offset="0"/>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--default button highlight-->
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <!--inner drop shadow when pressed / checked-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.60"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btn-default" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#333"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#ccc"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-primary" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#428bca"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#357ebd"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-success" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#5cb85c"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#4cae4c"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-info" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#5bc0de"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#46b8da"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-warning" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#f0ad4e"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#eea236"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-danger" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#d9534f"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#d43f3a"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource HeaderBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#1ba1e2"/>
            <Setter Property="BorderBrush" Value="#1684ba"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dddddd" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="White">
        <Grid  Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Grid.Row="0" x:Name="label" Content="Reporte de Facturas electronicas" HorizontalContentAlignment="Center" FontSize="18" FontWeight="Bold" FontFamily="Times New Roman" />
            <Grid  Grid.Column="0" Grid.Row="1" Margin="0,0,0,0"  >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="4*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <Label  Grid.Column="1" Grid.Row="0" Content="Tipo de comprobante" HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                <Label  Grid.Column="1" Grid.Row="1" Content="Estado de comprobante en SCC" HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                <Label  Grid.Column="1" Grid.Row="2" Content="Estado de comprobante en SUNAT" HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                <ComboBox  x:Name="cboTipoComprobante" Grid.Column="2" Grid.Row="0" Margin="0,5,5,5"/>
                <ComboBox  x:Name="cboEstadoSCC" Grid.Column="2" Grid.Row="1" Margin="0,5,5,5"/>
                <ComboBox  x:Name="cboEstadoSunat" Grid.Column="2" Grid.Row="2" Margin="0,5,5,5"/>
                <Label  Grid.Column="3" Grid.Row="0" Content="Fecha de Inicio" HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                <Label  Grid.Column="3" Grid.Row="1" Content="Fecha de Fin" HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                <DatePicker   x:Name="datePick_inicio" Grid.Column="4" Grid.Row="0" Margin="0,5,5,5"  IsDropDownOpen="False" IsTodayHighlighted="True" />
                <DatePicker   x:Name="datePick_fin" Grid.Column="4" Grid.Row="1" Margin="0,5,5,5"  IsDropDownOpen="False" IsTodayHighlighted="True" />
                <StackPanel  Grid.Column="3" Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button Content="Consultar" Margin="0,0,5,0" Style="{StaticResource BaseButtonStyle}" Click="btnFiltro_Click" />
                </StackPanel>
            </Grid>
            <DataGrid Grid.Column="0" Grid.Row="2" Margin="40,10,40,0" FrozenColumnCount ="0" x:Name="dgComprobantes" ColumnHeaderStyle="{DynamicResource HeaderStyle}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  SelectionMode="Single"
                  CanUserDeleteRows="False"
                  CanUserResizeRows="False"
                  Background="White"
                  HeadersVisibility="Column"
                  VerticalGridLinesBrush="#000000"
                  GridLinesVisibility="None" SelectionUnit="FullRow"  MaxHeight="400" MinHeight="300"  >

                <DataGrid.Columns>
                    <!--<DataGridTemplateColumn Width="25" CanUserReorder="False" CanUserResize="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Name="chkDiscontinue"  IsChecked="{Binding Path=Check,Mode=TwoWay}" Margin="0 2 0 0" Checked="chkDiscontinue_Checked" Unchecked="chkDiscontinue_Unchecked"  />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->
                    <!-- <DataGridTemplateColumn >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Check, Mode=TwoWay}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                    <DataGridTextColumn Binding="{Binding TipoTexto}" IsReadOnly="True" MinWidth="150" Width="3*" CanUserReorder="False">
                        <DataGridTextColumn.Header>
                            <TextBlock  Text="Comprobante" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Tipo}" IsReadOnly="True" MinWidth="50"  Width="*" CanUserReorder="False" SortDirection="Ascending" CanUserSort="True"  >
                        <DataGridTextColumn.Header>
                            <TextBlock  Text="Codigo" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Binding="{Binding EstadoSCC}" IsReadOnly="True" MinWidth="70" Width="2*" CanUserReorder="False"  SortDirection="Ascending" CanUserSort="True" >
                        <DataGridTextColumn.Header>
                            <TextBlock  Text="Estado SCC" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="ENVIADO">
                                        <Setter Property="Background" Value="#b1e256"/>
                                        <!--<Setter Property="Text" Value="Factura"/>-->
                                    </Trigger>
                                    <Trigger Property="Text" Value="PENDIENTE (CORRECTO)">
                                        <Setter Property="Background" Value="#56a5e2"/>
                                        <!--<Setter Property="Text" Value="Factura"/>-->
                                    </Trigger>
                                    <Trigger Property="Text" Value="PENDIENTE (ERRORES)">
                                        <Setter Property="Background" Value="#e25656"/>
                                        <!--<Setter Property="Text" Value="Factura"/>-->
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding EstadoSunat}" IsReadOnly="True" MinWidth="80" Width="2*" CanUserReorder="False" SortDirection="Ascending" CanUserSort="True" >
                        <DataGridTextColumn.Header>
                            <TextBlock  Text="Estado Sunat" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="ACEPTADO">
                                        <Setter Property="Background" Value="#b1e256"/>
                                        <!--<Setter Property="Text" Value="Factura"/>-->
                                    </Trigger>
                                    <Trigger Property="Text" Value="RECHAZADO">
                                        <Setter Property="Background" Value="#e28f36"/>
                                        <!--<Setter Property="Text" Value="Factura"/>-->
                                    </Trigger>
                                    <Trigger Property="Text" Value="SIN RESPUESTA">
                                        <Setter Property="Background" Value="#e25656"/>
                                        <!--<Setter Property="Text" Value="Factura"/>-->
                                    </Trigger>
                                    <Trigger Property="Text" Value="DE BAJA">
                                        <Setter Property="Background" Value="#f99686"/>
                                        <!--<Setter Property="Text" Value="Factura"/>-->
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding SerieNumero}" IsReadOnly="True" MinWidth="100" Width="2*" CanUserReorder="False" SortDirection="Ascending" CanUserSort="True">
                        <DataGridTextColumn.Header>
                            <TextBlock  Text="Serie-Numero" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn   Binding="{Binding FechaEmision}" IsReadOnly="True" MinWidth="100" Width="2*" CanUserReorder="False" SortDirection="Ascending" CanUserSort="True" >
                        <DataGridTextColumn.Header>
                            <TextBlock  Text="Fecha de emision" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  Binding="{Binding FechaEnvio}"  IsReadOnly="True" MinWidth="100" Width="2*" CanUserReorder="False"  SortDirection="Ascending" CanUserSort="True">
                        <DataGridTextColumn.Header>
                            <TextBlock  Text="Fecha de Envio" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Comentario}"  Width="3*" IsReadOnly="True"  CanUserSort="False" CanUserReorder="False" CanUserResize="False"  >
                        <DataGridTextColumn.Header>
                            <TextBlock  Text="Comentario" VerticalAlignment="Center" HorizontalAlignment="Center"  />
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style>
                                <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                <Setter Property="TextBlock.FontSize" Value="9" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid  Grid.Column="0" Grid.Row="3" Margin="0,20,40,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <DockPanel   Grid.Column="4" Grid.ColumnSpan="2" Grid.Row="0" HorizontalAlignment="Right">
                    <!--<Label Content="Descargar reporte:"   VerticalAlignment="Center" HorizontalAlignment="Right"/>-->
                    <ComboBox  x:Name="cboDownload" Width="100" HorizontalContentAlignment="Center"/>
                    <Button  Margin="10,0,0,0" HorizontalAlignment="Right" Click="btnReporte_Click" >
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image Source="/FEIv2;component/images/download-png.png" Margin="10,0,0,0" Width="20" Height="18" Stretch="Fill"  />
                            <Label Content="Reporte"/>
                        </StackPanel>
                    </Button>
                </DockPanel>
            </Grid>

        </Grid>

    </Grid>
</Page>
